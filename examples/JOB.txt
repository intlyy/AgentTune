Given the OLAP characteristics and the described knob settings, my recommendations will aim to optimize for better read performance and disk I/O management, as the workload consists of complex read-only multi-join queries. Here's the proposed configuration adjustment with rationales:

1. **innodb_buffer_pool_size**:
   - Current: 10GB
   - Recommended: 12GB
   - Rationale: Maximizing the buffer pool size within the available memory limits to reduce direct disk reads, as indicated by the `buffer_pool_reads` metric. This would help hold more data in memory for the complex joins.

2. **innodb_io_capacity** and **innodb_io_capacity_max**:
   - Current: 500 and 1000 respectively
   - Recommended: 800 and 1600 respectively
   - Rationale: Increase I/O throughput capabilities since disk reads and writes (data reads: 365980 and data writes: 53) are pertinent to system performance, especially on HDD.

3. **innodb_flush_log_at_trx_commit**:
   - Current: 2
   - Recommended: 2
   - Rationale: Keep at 2 as it improves performance by not flushing the log at every transaction commit, which is suitable for read-only workloads.

4. **innodb_read_io_threads** and **innodb_write_io_threads**:
   - Current: 4 each
   - Recommended: 4 each
   - Rationale: Already maxed out for the available range, promoting parallel read and write operations.

5. **tmp_table_size** and **max_heap_table_size**:
   - Current: 256MB each
   - Recommended: 256MB each
   - Rationale: Sufficient for handling complex queries in memory and should align with each other for effective handling of internal in-memory tables.

6. **query_cache_size**:
   - Recommended: 0 (disabled)
   - Rationale: Disabling the query cache is recommended for OLAP environments to minimize contention given MySQL 5.7.

7. **innodb_flush_method**:
   - Recommended: O_DIRECT
   - Rationale: Since the disk type is HDD, 'O_DIRECT' helps in reducing OS cache involvement and directs operations straight to the disk, minimizing overhead.

8. **sort_buffer_size** and **read_rnd_buffer_size**:
   - Recommended: Increase sort_buffer_size to 4M and read_rnd_buffer_size to 4M.
   - Rationale: As the queries are complex and involve multiple joins, increasing these buffers can potentially help in faster sorting and reading operations.

9. **table_open_cache**:
   - Recommended: Increase to 4000
   - Rationale: With 50 tables involved in frequent multi-join queries, a higher table open cache can reduce overhead from frequent open and closes.

Implementing these recommendations should ideally reduce the latency by optimizing memory usage and disk I/O operations, crucial for enhancing the performance of complex join queries typical in OLAP systems. These changes focus on leveraging the available system resources more effectively while ensuring stability and performance.