Given your OLAP workload characteristics, PostgreSQL database, and the server configuration of 32 vCPUs and 64GB RAM with HDD storage, there are several key PostgreSQL configuration parameters (or knobs) that can be tuned to optimize latency for the queries provided:

### Key Considerations for OLAP:
1. **Memory Usage** - OLAP queries tend to be complex involving large datasets, therefore efficient memory usage is critical.
2. **Parallel Processing** - Since the server has 32 vCPUs, leveraging parallel query processing can significantly reduce response times for complex analytical queries.
3. **Disk I/O** - Optimization is necessary especially because the server uses HDD which can be a bottleneck.

### Recommended Configuration:
```json
{
    "max_connections": 100,
    "shared_buffers": "16GB",
    "work_mem": "256MB",
    "maintenance_work_mem": "2GB",
    "effective_cache_size": "48GB",
    "wal_buffers": "16MB",
    "min_wal_size": "4GB",
    "max_wal_size": "16GB",
    "checkpoint_completion_target": 0.9,
    "wal_level": "replica",
    "default_statistics_target": 100,
    "random_page_cost": 4,
    "seq_page_cost": 1,
    "effective_io_concurrency": 2,
    "max_worker_processes": 32,
    "max_parallel_workers_per_gather": 8,
    "max_parallel_workers": 32,
    "max_parallel_maintenance_workers": 4
}
```

### Explanation of Key Knobs:
- **max_connections**: This is set considering the number of simultaneous connections your server might need to handle. Not too high to avoid excessive overhead.
- **shared_buffers**: Set to about 25% of your system memory. It helps in caching blocks of data in memory.
- **work_mem**: Memory allocated during sort operations and hash tables before writing to disk. Important for query performance.
- **maintenance_work_mem**: Memory for maintenance tasks such as VACUUM, CREATE INDEX.
- **effective_cache_size**: An estimation of memory available for disk caching by the OS and within PostgreSQL.
- **wal_buffers, min_wal_size, max_wal_size**: Settings related to the Write-Ahead Logging which is crucial for data durability.
- **checkpoint_completion_target**: Prolongs the time period for writing WAL to spread out disk I/O load.
- **wal_level**: Set to 'replica' which is sufficient for most users and aids in replication.
- **default_statistics_target**: For improving the planner's estimates about query execution using statistics.
- **random_page_cost**: Set higher than seq_page_cost because HDDs have significant random access latency.
- **seq_page_cost**: Cost estimation for sequential scans, set lower to prefer them over index scans on large data sets typical in OLAP.
- **effective_io_concurrency**: Estimated number of I/O operations that can be executed in parallel.
- **max_worker_processes, max_parallel_workers, max_parallel_workers_per_gather, max_parallel_maintenance_workers**: These settings enable and configure parallel query processing utilizing multiple cores.

Each setting is carefully adjusted based on the given hardware specs and the nature of the workload to optimize performance, particularly reducing latency in handling large complex queries typical in OLAP workloads. Adjust these configurations as needed based on further observation of system performance and query response times.